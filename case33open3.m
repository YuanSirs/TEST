function mpc = case33open3
%   case33open.m:  Power flow data for 33 bus with 32 transmission lines.
%   Please see CASEFORMAT for details on the case file format.
%
%   Made by Tao Ding, Tsinghua University (Also a visiting scholar of The
%   University of Tennessee, Knoxville).

%   Thanks to the help of Linquan Bai and Xue Li, who are the Ph.D. student
%   of The University of Tennessee, Knoxville
%   2014/03/10

%% MATPOWER Case Format : Version 2
mpc.version = '2';

%%-----  Power Flow Data  -----%%
%% system MVA base
mpc.baseMVA = 10;

%% bus data
%	bus_i	type	Pd	Qd	Gs	Bs	area	Vm	Va	baseKV	zone	Vmax	Vmin
mpc.bus = [
    1   3   0       0       0   0   1   1   0   12.66   1   1.1   0.9;
	2   1   0.100   0.060   0   0   1   1   0   12.66   1   1.1   0.9;
    3   1   0.090   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
    4   1   0.120   0.080   0   0   1   1   0   12.66   1   1.1   0.9;
    5   1   0.060   0.030   0   0   1   1   0   12.66   1   1.1   0.9;
    6   1   0.060   0.020   0   0   1   1   0   12.66   1   1.1   0.9;
    7   1   0.200   0.100   0   0   1   1   0   12.66   1   1.1   0.9;
    8   1   0.200   0.100   0   0   1   1   0   12.66   1   1.1   0.9;
    9   1   0.060   0.020   0   0   1   1   0   12.66   1   1.1   0.9;
    10  1   0.060   0.020   0   0   1   1   0   12.66   1   1.1   0.9;
    11  1   0.045   0.030   0   0   1   1   0   12.66   1   1.1   0.9;
    12  1   0.060   0.035   0   0   1   1   0   12.66   1   1.1   0.9;
    13  1   0.060   0.035   0   0   1   1   0   12.66   1   1.1   0.9;
    14  1   0.020   0.080   0   0   1   1   0   12.66   1   1.1   0.9;
    15  1   0.060   0.010   0   0   1   1   0   12.66   1   1.1   0.9;
    16  1   0.060   0.020   0   0   1   1   0   12.66   1   1.1   0.9;
    17  1   0.060   0.020   0   0   1   1   0   12.66   1   1.1   0.9;
    18  1   0.090   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
    19  1   0.090   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
    20  1   0.090   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
    21  1   0.090   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
    22  1   0.090   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
    23  1   0.090   0.050   0   0   1   1   0   12.66   1   1.1   0.9;
    24  1   0.420   0.200   0   0   1   1   0   12.66   1   1.1   0.9;
    25  1   0.420   0.200   0   0   1   1   0   12.66   1   1.1   0.9;
    26  1   0.060   0.025   0   0   1   1   0   12.66   1   1.1   0.9;
    27  1   0.060   0.025   0   0   1   1   0   12.66   1   1.1   0.9;
    28  1   0.060   0.020   0   0   1   1   0   12.66   1   1.1   0.9;
    29  1   0.120   0.070   0   0   1   1   0   12.66   1   1.1   0.9;
    30  1   0.200   0.600   0   0   1   1   0   12.66   1   1.1   0.9;
    31  1   0.150   0.070   0   0   1   1   0   12.66   1   1.1   0.9;
    32  1   0.210   0.100   0   0   1   1   0   12.66   1   1.1   0.9;
%     33  1   0   0   0   0   1   1   0   12.66   1   1.1   0.9;
    33  1   0.060   0.040   0   0   1   1   0   12.66   1   1.1   0.9;
];
%% generator data
%	bus	Pg	Qg	Qmax	Qmin	Vg	mBase	status	Pmax	Pmin	Pc1	Pc2	Qc1min	Qc1max	Qc2min	Qc2max	ramp_agc	ramp_10	ramp_30	ramp_q	apf
mpc.gen = [
	1	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
	6	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
	20	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
	33	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
	22	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
	25	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
	30	0	0	300	-300	1	10	1	1000	0	0	0	0	0	0	0	0	0	0	0	1;
];

%% branch data
%	fbus	tbus	r	x	b	rateA	rateB	rateC	ratio	angle	status	angmin	angmax
mpc.branch = [
    1   2   0.0922   0.0470   0   250   250   250   0   0   1;
    2   3   0.4930   0.2511   0   250   250   250   0   0   1;
    3   4   0.3660   0.1864   0   250   250   250   0   0   1;
    4   5   0.3811   0.1941   0   250   250   250   0   0   1;
    5   6   0.8190   0.7070   0   250   250   250   0   0   1;
    6   7   0.1872   0.6188   0   250   250   250   0   0   1;
    7   8   0.7114   0.2351   0   250   250   250   0   0   1;
    8   9   1.0300   0.7400   0   250   250   250   0   0   1;
    9   10  1.0440   0.7400   0   250   250   250   0   0   1;
    10  11  0.1966   0.0650   0   250   250   250   0   0   1;
    11  12  0.3744   0.1238   0   250   250   250   0   0   1;
    12  13  1.4680   1.1550   0   250   250   250   0   0   1;
    13  14  0.5416   0.7129   0   250   250   250   0   0   1;
    14  15  0.5910   0.5260   0   250   250   250   0   0   1;
    15  16  0.7463   0.5450   0   250   250   250   0   0   1;
    16  17  1.2890   1.7210   0   250   250   250   0   0   1;
    17  18  0.3720   0.5740   0   250   250   250   0   0   1;
    2   19  0.1640   0.1565   0   250   250   250   0   0   1;
    19  20  1.5042   1.3554   0   250   250   250   0   0   1;
    20  21  0.4095   0.4784   0   250   250   250   0   0   1;
    21  22  0.7089   0.9373   0   250   250   250   0   0   1;
    3   23  0.4512   0.3083   0   250   250   250   0   0   1;
    23  24  0.8980   0.7091   0   250   250   250   0   0   1;
    24  25  0.8960   0.7011   0   250   250   250   0   0   1;
    6   26  0.2030   0.1034   0   250   250   250   0   0   1;
    26  27  0.2842   0.1447   0   250   250   250   0   0   1;
    27  28  1.0590   0.9337   0   250   250   250   0   0   1;
    28  29  0.8042   0.7006   0   250   250   250   0   0   1;
    29  30  0.5075   0.2585   0   250   250   250   0   0   1;
    30  31  0.9744   0.9630   0   250   250   250   0   0   1;
    31  32  0.3105   0.3619   0   250   250   250   0   0   1;
    32  33  0.3410   0.5362   0   250   250   250   0   0   1;
%     8   21  2.0000   2.0000   0   250   250   250   0   0   1;
%     9   15  2.0000   2.0000   0   250   250   250   0   0   1;
%     12  22  2.0000   2.0000   0   250   250   250   0   0   1;
%     18  33  0.5000   0.5000   0   250   250   250   0   0   1;
%     25  29  0.5000   0.5000   0   250   250   250   0   0   1;
];

% Convert the actual value to P.U. value
mpc.branch(:,3) = mpc.branch(:,3)/(12.66*12.66/mpc.baseMVA);
mpc.branch(:,4) = mpc.branch(:,4)/(12.66*12.66/mpc.baseMVA);
% % 把负荷扩大十倍，观察结果更明显。
% mpc.bus(:,3) = mpc.bus(:,3)*10;
% mpc.bus(:,3) = mpc.bus(:,3)*10;

%%-----  OPF Data  -----%%
%% area data
%	area	refbus


%% generator cost data
%	1	startup	shutdown	n	x1	y1	...	xn	yn
%	2	startup	shutdown	n	c(n-1)	...	c0
mpc.gencost = [
    2	1500	0	3	1	5	150; 
    2	1500	0	3   8	5	150; 
    2	1500	0	3	 8	5	150; 
    2	1500	0	3	8	5	150; 
%     2	1500	0	3	0.51	5	150; 
%     2	1500	0	3	0.41	5	150; 
%     2	1500	0	3	0.11	5	150; 

% 	2	2000	0	3	0.085	1.2	600;
% 	2	3000	0	3	0.1225	1	335;

];
